{"ast":null,"code":"import { loginFailure, loginStart, loginSuccess, logoutFailure, logoutStart, logoutSuccess } from \"./userSlice\";\nimport { publicRequest, userRequest } from \"../requestsMethods\";\nimport { addGameStart, addGameSuccess, addGameFailure, getGameStart, getGameFailure, getGameSuccess } from \"../redux/gameRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const logout = async (dispatch, user) => {\n  dispatch(logoutStart());\n\n  try {\n    const res = await userRequest.get(\"/auth/logout\");\n    dispatch(logoutSuccess());\n  } catch (err) {\n    dispatch(logoutFailure());\n  }\n};\nexport const create = async (dispatch, game) => {\n  dispatch();\n};","map":{"version":3,"names":["loginFailure","loginStart","loginSuccess","logoutFailure","logoutStart","logoutSuccess","publicRequest","userRequest","addGameStart","addGameSuccess","addGameFailure","getGameStart","getGameFailure","getGameSuccess","login","dispatch","user","res","post","data","err","logout","get","create","game"],"sources":["C:/Users/Legion/Desktop/Play Store/storefront/src/redux/apiCalls.js"],"sourcesContent":["import { loginFailure, loginStart, loginSuccess, logoutFailure, logoutStart, logoutSuccess } from \"./userSlice\";\r\nimport { publicRequest, userRequest } from \"../requestsMethods\"\r\nimport {addGameStart, addGameSuccess, addGameFailure, getGameStart, getGameFailure, getGameSuccess} from \"../redux/gameRedux\"\r\n\r\nexport const login = async (dispatch, user) => {\r\n    dispatch(loginStart());\r\n    try{\r\n        const res = await publicRequest.post(\"/auth/login\", user)\r\n        dispatch(loginSuccess(res.data))\r\n    }catch(err){\r\n        dispatch(loginFailure())\r\n    }\r\n}\r\n\r\nexport const logout = async (dispatch, user) => {\r\n    dispatch(logoutStart());\r\n    try{\r\n        const res = await userRequest.get(\"/auth/logout\")\r\n        dispatch(logoutSuccess())\r\n    } catch (err){\r\n        dispatch(logoutFailure())\r\n    }\r\n}\r\n\r\nexport const create = async (dispatch, game) => {\r\n    dispatch()\r\n}"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,EAAiDC,aAAjD,EAAgEC,WAAhE,EAA6EC,aAA7E,QAAkG,aAAlG;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,oBAA3C;AACA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,cAAtC,EAAsDC,YAAtD,EAAoEC,cAApE,EAAoFC,cAApF,QAAyG,oBAAzG;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;EAC3CD,QAAQ,CAACd,UAAU,EAAX,CAAR;;EACA,IAAG;IACC,MAAMgB,GAAG,GAAG,MAAMX,aAAa,CAACY,IAAd,CAAmB,aAAnB,EAAkCF,IAAlC,CAAlB;IACAD,QAAQ,CAACb,YAAY,CAACe,GAAG,CAACE,IAAL,CAAb,CAAR;EACH,CAHD,CAGC,OAAMC,GAAN,EAAU;IACPL,QAAQ,CAACf,YAAY,EAAb,CAAR;EACH;AACJ,CARM;AAUP,OAAO,MAAMqB,MAAM,GAAG,OAAON,QAAP,EAAiBC,IAAjB,KAA0B;EAC5CD,QAAQ,CAACX,WAAW,EAAZ,CAAR;;EACA,IAAG;IACC,MAAMa,GAAG,GAAG,MAAMV,WAAW,CAACe,GAAZ,CAAgB,cAAhB,CAAlB;IACAP,QAAQ,CAACV,aAAa,EAAd,CAAR;EACH,CAHD,CAGE,OAAOe,GAAP,EAAW;IACTL,QAAQ,CAACZ,aAAa,EAAd,CAAR;EACH;AACJ,CARM;AAUP,OAAO,MAAMoB,MAAM,GAAG,OAAOR,QAAP,EAAiBS,IAAjB,KAA0B;EAC5CT,QAAQ;AACX,CAFM"},"metadata":{},"sourceType":"module"}
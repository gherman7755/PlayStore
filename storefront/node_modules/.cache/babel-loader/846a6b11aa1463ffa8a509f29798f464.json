{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const gameSlice = createSlice({\n  name: \"game\",\n  initialState: {\n    games: [],\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    getGameStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    getGameSuccess: (state, action) => {\n      state.isFetching = false;\n      state.games = action.payload;\n    },\n    getGameFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    addGameStart: state => {\n      console.log(\"started\");\n      state.isFetching = true;\n      state.error = false;\n    },\n    addGameSuccess: (state, action) => {\n      console.log(\"successed\");\n      state.isFetching = false;\n      state.games.push(action.payload);\n    },\n    addGameFailure: state => {\n      console.log(\"failed\");\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  getGameSuccess,\n  getGameFailure,\n  getGameStart,\n  addGameFailure,\n  addGameStart,\n  addGameSuccess\n} = gameSlice.actions;\nexport default gameSlice.reducer;","map":{"version":3,"names":["createSlice","gameSlice","name","initialState","games","isFetching","error","reducers","getGameStart","state","getGameSuccess","action","payload","getGameFailure","addGameStart","console","log","addGameSuccess","push","addGameFailure","actions","reducer"],"sources":["C:/Users/Legion/Desktop/Play Store/storefront/src/redux/gameRedux.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const gameSlice = createSlice({\r\n    name: \"game\",\r\n    initialState: {\r\n        games: [],\r\n        isFetching: false,\r\n        error: false,\r\n    },\r\n    reducers: {\r\n        getGameStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        getGameSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.games = action.payload\r\n        },\r\n        getGameFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        addGameStart: (state) => {\r\n            console.log(\"started\");\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        addGameSuccess: (state, action) => {\r\n            console.log(\"successed\");\r\n            state.isFetching = false;\r\n            state.games.push(action.payload)\r\n        },\r\n        addGameFailure: (state) => {\r\n            console.log(\"failed\");\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        }\r\n    },\r\n})\r\n\r\nexport const {getGameSuccess,getGameFailure,getGameStart,addGameFailure, addGameStart, addGameSuccess} = gameSlice.actions;\r\n\r\nexport default gameSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,MAD2B;EAEjCC,YAAY,EAAE;IACVC,KAAK,EAAE,EADG;IAEVC,UAAU,EAAE,KAFF;IAGVC,KAAK,EAAE;EAHG,CAFmB;EAOjCC,QAAQ,EAAE;IACNC,YAAY,EAAGC,KAAD,IAAW;MACrBA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;MACAI,KAAK,CAACH,KAAN,GAAc,KAAd;IACH,CAJK;IAKNI,cAAc,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC/BF,KAAK,CAACJ,UAAN,GAAmB,KAAnB;MACAI,KAAK,CAACL,KAAN,GAAcO,MAAM,CAACC,OAArB;IACH,CARK;IASNC,cAAc,EAAGJ,KAAD,IAAW;MACvBA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;MACAI,KAAK,CAACH,KAAN,GAAc,IAAd;IACH,CAZK;IAaNQ,YAAY,EAAGL,KAAD,IAAW;MACrBM,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAP,KAAK,CAACJ,UAAN,GAAmB,IAAnB;MACAI,KAAK,CAACH,KAAN,GAAc,KAAd;IACH,CAjBK;IAkBNW,cAAc,EAAE,CAACR,KAAD,EAAQE,MAAR,KAAmB;MAC/BI,OAAO,CAACC,GAAR,CAAY,WAAZ;MACAP,KAAK,CAACJ,UAAN,GAAmB,KAAnB;MACAI,KAAK,CAACL,KAAN,CAAYc,IAAZ,CAAiBP,MAAM,CAACC,OAAxB;IACH,CAtBK;IAuBNO,cAAc,EAAGV,KAAD,IAAW;MACvBM,OAAO,CAACC,GAAR,CAAY,QAAZ;MACAP,KAAK,CAACJ,UAAN,GAAmB,KAAnB;MACAI,KAAK,CAACH,KAAN,GAAc,IAAd;IACH;EA3BK;AAPuB,CAAD,CAA7B;AAsCP,OAAO,MAAM;EAACI,cAAD;EAAgBG,cAAhB;EAA+BL,YAA/B;EAA4CW,cAA5C;EAA4DL,YAA5D;EAA0EG;AAA1E,IAA4FhB,SAAS,CAACmB,OAA5G;AAEP,eAAenB,SAAS,CAACoB,OAAzB"},"metadata":{},"sourceType":"module"}